#!/bin/sh
# postinst script for Wazuh
# Wazuh, Inc 2015-2020
set -e
case "$1" in
    configure)

    OS=$(lsb_release -si)
    VER=$(lsb_release -sr)
    DIR="/var/ossec"
    USER="ossec"
    USER_MAIL="ossecm"
    USER_REM="ossecr"
    GROUP="ossec"
    WAZUH_GLOBAL_TMP_DIR="${DIR}/packages_files"
    WAZUH_TMP_DIR="${WAZUH_GLOBAL_TMP_DIR}/manager_config_files"
    OSMYSHELL="/sbin/nologin"
    SCRIPTS_DIR="${WAZUH_GLOBAL_TMP_DIR}/manager_installation_scripts"
    SCA_BASE_DIR="${SCRIPTS_DIR}/sca"

    if [ ! -f ${OSMYSHELL} ]; then
        if [ -f "/bin/false" ]; then
            OSMYSHELL="/bin/false"
        fi
    fi

    if ! getent group | grep -q "^ossec" ; then
        addgroup --system ossec  > /dev/null 2>&1
    fi
    if ! getent passwd | grep -q "^ossec" ; then
        adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER} > /dev/null 2>&1
    fi
    if ! getent passwd | grep -q "^ossecm" ; then
        adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER_MAIL} > /dev/null 2>&1
    fi
    if ! getent passwd | grep -q "^ossecr" ; then
        adduser --system --home ${DIR} --shell ${OSMYSHELL} --ingroup ${GROUP} ${USER_REM} > /dev/null 2>&1
    fi

    if [ -z "$2" ] || [ -f ${WAZUH_TMP_DIR}/create_conf ] ; then

        ${SCRIPTS_DIR}/gen_ossec.sh conf manager ${OS} ${VER} > ${DIR}/etc/ossec.conf
        ${SCRIPTS_DIR}/add_localfiles.sh >> ${DIR}/etc/ossec.conf

        passlist="${DIR}/agentless/.passlist"

        if [ -f $passlist ] && ! base64 -d $passlist > /dev/null 2>&1; then
            cp $passlist $passlist.bak
            base64 $passlist.bak > $passlist
            if [ $? = 0 ]; then
                rm -f $passlist.bak
            else
                echo "ERROR: Couldn't encode Agentless passlist."
                mv $passlist.bak $passlist
            fi
        fi
    else
        ${SCRIPTS_DIR}/gen_ossec.sh conf manager ${OS} ${VER} > ${DIR}/etc/ossec.conf.new
        chmod 660 ${DIR}/etc/ossec.conf.new
    fi

    # Remove existing SQLite databases
    rm -f ${DIR}/var/db/global.db* || true
    rm -f ${DIR}/var/db/cluster.db* || true
    rm -f ${DIR}/var/db/.profile.db* || true
    rm -f ${DIR}/var/db/agents/* || true
    # Remove Vuln-detector database
    rm -f ${DIR}/queue/vulnerabilities/cve.db || true

    # Restoring file permissions
    ${SCRIPTS_DIR}/restore-permissions.sh > /dev/null 2>&1 || true

    # Generation auto-signed certificate if not exists
    if type openssl >/dev/null 2>&1 && [ ! -f "${DIR}/etc/sslmanager.key" ] && [ ! -f "${DIR}/etc/sslmanager.cert" ]; then
        openssl req -x509 -batch -nodes -days 365 -newkey rsa:2048 -subj "/C=US/ST=California/CN=Wazuh/" -keyout ${DIR}/etc/sslmanager.key -out ${DIR}/etc/sslmanager.cert 2>/dev/null
        chmod 640 ${DIR}/etc/sslmanager.key
        chmod 640 ${DIR}/etc/sslmanager.cert
    fi

    # For the etc dir
    if [ -f /etc/localtime ]; then
        cp -pL /etc/localtime ${DIR}/etc/;
        chmod 640 ${DIR}/etc/localtime
        chown root:${GROUP} ${DIR}/etc/localtime
    fi

    if [ -f /etc/TIMEZONE ]; then
        cp -p /etc/TIMEZONE ${DIR}/etc/;
        chmod 640 ${DIR}/etc/TIMEZONE
        chown root:${GROUP} ${DIR}/etc/localtime
    fi

    # For the /var/run and global-db
    chmod -R 770 ${DIR}/var
    chmod 750 ${DIR}/var
    chown -R root:${GROUP} ${DIR}/var
    chown -R ${USER}:${GROUP} ${DIR}/var/multigroups
    chmod 770 ${DIR}/var/selinux > /dev/null 2>&1 || true
    chmod -R 640 ${DIR}/var/selinux/* > /dev/null 2>&1 || true
    chmod 770 ${DIR}/var/db > /dev/null 2>&1 || true
    chmod -R 660 ${DIR}/var/db/* > /dev/null 2>&1 || true
    chmod 660 ${DIR}/var/db/.profile.db > /dev/null 2>&1 || true
    chmod 770 ${DIR}/var/db/agents > /dev/null 2>&1 || true


    # More files
    touch ${DIR}/etc/client.keys

    touch ${DIR}/logs/active-responses.log
    touch ${DIR}/logs/integrations.log
    chown ossec:ossec ${DIR}/logs/active-responses.log
    chown ossecm:ossec ${DIR}/logs/integrations.log
    chmod 0660 ${DIR}/logs/active-responses.log
    chmod 0640 ${DIR}/logs/integrations.log

    # Restore file permissions after upgrading
    chmod 0660 ${DIR}/etc/ossec.conf

    chmod 770 ${DIR}/etc/lists
    chmod 770 ${DIR}/etc/lists/amazon
    chmod 660 ${DIR}/etc/lists/amazon/*
    chmod 660 ${DIR}/etc/lists/audit-keys
    chmod 660 ${DIR}/etc/lists/audit-keys.cdb
    chmod 660 ${DIR}/etc/lists/security-eventchannel
    chmod 660 ${DIR}/etc/lists/security-eventchannel.cdb
    chmod 770 ${DIR}/etc/shared/default
    chmod 660 ${DIR}/etc/decoders/*
    chmod 660 ${DIR}/etc/rules/*

    chmod 440 ${DIR}/queue/vulnerabilities/dictionaries/cpe_helper.json
    chmod 440 ${DIR}/queue/vulnerabilities/dictionaries/msu.json.gz
    chmod 660 ${DIR}/queue/vulnerabilities/

    chown -R root:ossec ${DIR}/queue/vulnerabilities/
    chown -R root:ossec ${DIR}/etc/client.keys
    chown -R ossec:ossec ${DIR}/etc/lists/*
    chown -R ossec:ossec ${DIR}/etc/decoders/*
    chown -R ossec:ossec ${DIR}/etc/rules/*
    chown -R ossec:ossec ${DIR}/etc/shared/*
    if [ -f ${DIR}/etc/shared/ar.conf ]; then
        chown root:ossec ${DIR}/etc/shared/ar.conf
    fi

    # create cluster.log file if not exists
    if [ -f ${DIR}/logs/cluster.log ]; then
        chmod 660 ${DIR}/logs/cluster.log
        chown ${USER}:${GROUP} ${DIR}/logs/cluster.log
    fi

    touch ${DIR}/logs/active-responses.log
    chown ossec:ossec ${DIR}/logs/active-responses.log
    chmod 0660 ${DIR}/logs/active-responses.log

    # Check if SELinux is installed and enabled
    if command -v getenforce > /dev/null 2>&1 && command -v semodule > /dev/null 2>&1; then
        if [ $(getenforce) !=  "Disabled" ]; then
            semodule -i ${DIR}/var/selinux/wazuh.pp
            semodule -e wazuh
        fi
    fi

    # Install the SCA files
    if [ -d "${SCA_BASE_DIR}" ]; then

        . ${SCRIPTS_DIR}/src/init/dist-detect.sh

        SCA_DIR="${DIST_NAME}/${DIST_VER}"

        SCA_TMP_DIR="${SCA_BASE_DIR}/${DIST_NAME}/${DIST_VER}"
        mkdir -p ${DIR}/ruleset/sca

        # Install the configuration files needed for this hosts
        if [ -r "${SCA_BASE_DIR}/${DIST_NAME}/${DIST_VER}/${DIST_SUBVER}/sca.files" ]; then
            SCA_TMP_DIR="${SCA_BASE_DIR}/${DIST_NAME}/${DIST_VER}/${DIST_SUBVER}"
        elif [ -r "${SCA_BASE_DIR}/${DIST_NAME}/${DIST_VER}/sca.files" ]; then
            SCA_TMP_DIR="${SCA_BASE_DIR}/${DIST_NAME}/${DIST_VER}"
        elif [ -r "${SCA_BASE_DIR}/${DIST_NAME}/sca.files" ]; then
            SCA_TMP_DIR="${SCA_BASE_DIR}/${DIST_NAME}"
        else
            SCA_TMP_DIR="${SCA_BASE_DIR}/generic"
        fi

        SCA_TMP_FILE="${SCA_TMP_DIR}/sca.files"

        if [ -r ${SCA_TMP_FILE} ] && [ -r ${SCA_BASE_DIR}/generic/sca.manager.files ]; then

            rm -f ${DIR}/ruleset/sca/* || true

            for sca_file in $(cat ${SCA_TMP_FILE}); do
                mv ${SCA_BASE_DIR}/${sca_file} ${DIR}/ruleset/sca
            done

            for sca_file in $(cat ${SCA_BASE_DIR}/generic/sca.manager.files); do
                filename=$(basename ${sca_file})
                if [ -f "${SCA_BASE_DIR}/${sca_file}" ] && [ ! -f "${DIR}/ruleset/sca/${filename}" ]; then
                    mv ${SCA_BASE_DIR}/${sca_file} ${DIR}/ruleset/sca/${filename}.disabled
                fi
            done
        fi

        # Set correct permissions, owner and group
        chmod 640 ${DIR}/ruleset/sca/*
        chown root:${GROUP} ${DIR}/ruleset/sca/*
        # Delete the temporary directory
        rm -rf ${SCA_BASE_DIR}

    fi

    # Delete installation scripts
    if [ -d ${SCRIPTS_DIR} ]; then
        rm -rf ${SCRIPTS_DIR}
    fi

    # Fix /etc/ossec-init.conf
    chmod 640 /etc/ossec-init.conf
    chown root:ossec /etc/ossec-init.conf

    # Fix Python permissions
    chmod 750 ${DIR}/framework/python/bin/2to3-3.8
    chmod 750 ${DIR}/framework/python/bin/pydoc3.8
    chmod 750 ${DIR}/framework/python/bin/python3-config
    chmod 0640 ${DIR}/framework/python/lib/pkgconfig/python-3.8-embed.pc
    chmod 0640 ${DIR}/framework/python/lib/pkgconfig/python-3.8.pc
    chmod 0640 ${DIR}/framework/python/lib/pkgconfig/python3.pc

    ;;


    abort-upgrade|abort-remove|abort-deconfigure)

    ;;


    *)
        echo "postinst called with unknown argument \`$1'" >22
        exit 1
    ;;

esac

exit 0